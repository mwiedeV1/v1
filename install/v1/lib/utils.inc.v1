<?v1

/**
 * Format byte size to readable format.
 *  
 */
function formatKBText (sizeBytes) {
	if (sizeBytes>=(1048576*1024))
		return round (sizeBytes / (1048576*1024), 1)." GB";
	else
	if (sizeBytes>=1048576)
		return round (sizeBytes / 1048576, 1)." MB";
	else	
	if (sizeBytes>=1024)
		return round (sizeBytes / 1024)." KB";		
	return sizeBytes." bytes";
}


/**
 * Create a compatible filename
 * Replace special characters and blanks
 *  
 */
 
function createCompatibleFilename (name, separator="_", maxChars=0, fLower=false) {
	filename = "";
	ignoreSpace = false;
	// Replace special chars
	name = str_replace (
		array ("|", "ä","Ä","ö","Ö","ü","Ü","ß","é"),
		array (" ", "ae","Ae","oe","Oe","ue","Ue","ss","ee"),
		name);
	
	name = utf8_decode (name);	
	length = strlen(name);

	for (i=0;i<length;i++) {
		c = substr (name, i, 1);
		if (ignoreSpace && (c==' '|| c==separator))
			continue;
	  cO = c;		
		if (c==' ') {
			c= cO = separator; ignoreSpace=true;
		}
		else {
			c = strtolower (c);
			if ((c<"a" || c>"z") && (c<"0" || c>"9") && c!="." && c!="_" && c!="-") {
				if (c==separator && !ignoreSpace) {
					ignoreSpace = true;
				}
				else {
					continue;
				}
			}
			else
				ignoreSpace=false;	
		}
		if (fLower)
			filename.=c;
		else
			filename.=cO;
	}
	if (maxChars>0 && strlen (filename)>maxChars)
		filename=substr (filename, 0, maxChars);
	
	return trim (filename, separator);
}	

/* Blank a string with zero bytes in memory */
function blankStr (&str, fZeroLen=false) {
	blank = "";
	resize (blank, strlen (str));
	memset (memref (str), blank);
	if (fZeroLen)
		resize (str, 0);
}

?>
